
#include <stdio.h>
#include <stdlib.h>
#include <cs50.h>
#include <string.h>
#include <ctype.h>

//prototypes
char encrypt (int UpOrLow, char c, int k);
void switchKeywordIndex (string keyword);

int main ( int argc,  string argv[]) 
{
   
    //checks length of argc; if not 2, then returns error
    if (argc != 2) 
    {
        printf("please include a keyword! \n");
        return 1;
    }
    
    string keyword = argv[1];
    
    //checks if keyword is a string of alphabetical characeters
    for (int i = 0, n = strlen(keyword); i < n; n++)
    {
        if (isalpha(keyword[i] = false))
        {
            printf("a keyword with only alphabetical characters please!");
            return 1;
        }
    }
  
    // convert keyword into array of numbers
   
 
   // enter text to be encrypted, store as string
         string message = GetString();
         switchKeywordIndex(keyword);
        //encrypts text
        for (int i = 0, n = strlen(message); i < n; i++)
        {
            int key = keyword [i];
            if (isupper(message[i]))
            {
                char switched = encrypt (65, message[i], key);
                printf ("%c", switched);
                
            } else if (islower(message[i]))
            {
                char switched = encrypt (97, message[i], key);
                printf ("%c", switched);
            } else 
            {
                printf("%c",message[i]);
            }
        }
        printf("\n");
    }


char encrypt (int UpOrLow, char c, int k)
{
   return ((((c + k) - UpOrLow) % 26) + UpOrLow); 
}

void switchKeywordIndex (string keyword)
{
    for (int i = 0, n = strlen(keyword); i < n; i++)
    {
        if (isupper(keyword[i])) 
        {
            keyword[i]= keyword[i] - 65;
            printf("%i", keyword[i]);
        }
        if (islower(keyword[i]))
        {
            keyword[i]= keyword[i]- 97;
               printf("%i", keyword[i]);
        }
    }
}